<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
    xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="         http://www.osgi.org/xmlns/blueprint/v1.0.0          https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">
    <!--  
    <cm:property-placeholder id="camel.activemq.blueprint" persistent-id="camel.activemq.blueprint">
        <cm:default-properties>
            <cm:property name="broker.url" value="vm://localhost:61616"/>
            <cm:property name="broker.username" value="admin"/>
            <cm:property name="broker.password" value="admin"/>
        </cm:default-properties>
    </cm:property-placeholder>
    -->
    <bean class="com.ncsp.esb.amq.processors.InsertPersonProcessor" id="insertRecord"/>
    <bean class="com.ncsp.esb.amq.processors.AxaptaJournalProcessor" id="selectRecords"/>
    <bean class="com.ncsp.esb.amq.processors.SetWagonStatusProcessor" id="setWagonStatus"/>
    <bean class="org.apache.qpid.jms.JmsConnectionFactory" id="jmsConnectionFactory">
        <property name="remoteURI" value="amqp://10.1.15.228:5672"/>
        <property name="username" value="admin"/>
        <property name="password" value="admin"/>
    </bean>
    <bean
        class="org.springframework.jms.connection.CachingConnectionFactory" id="jmsCachingConnectionFactory">
        <property name="targetConnectionFactory" ref="jmsConnectionFactory"/>
    </bean>
    <bean class="org.apache.camel.component.jms.JmsConfiguration" id="jmsConfig">
        <property name="connectionFactory" ref="jmsCachingConnectionFactory"/>
        <property name="cacheLevelName" value="CACHE_CONSUMER"/>
    </bean>
    <bean class="org.apache.camel.component.amqp.AMQPComponent" id="amqp">
        <property name="configuration" ref="jmsConfig"/>
    </bean>
    <!--  
    <bean class="org.apache.activemq.ActiveMQConnectionFactory" id="activemq-connection-factory">
        <property name="brokerURL" value="${broker.url}"/>
        <property name="userName" value="${broker.username}"/>
        <property name="password" value="${broker.password}"/>
    </bean>
    
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="activemq">
        <property name="configuration">
            <bean class="org.apache.activemq.camel.component.ActiveMQConfiguration">
                <property name="connectionFactory" ref="activemq-connection-factory"/>
            </bean>
        </property>
    </bean>
    -->
    <camelContext id="amq-example-context" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="jms-cbr-route" streamCache="true">
            <from id="listenToIncomingMessage" uri="amqp:queue:testQueue?transferExchange=true"/>
            <choice id="msgSelection">
                <when id="if_update">
                    <simple>${headers.topic} == ${type:com.ncsp.esb.amq.structures.TopicType.Update}</simple>
                    <log id="update_log" message="Sending message UPDATE ${body}"/>
                </when>
                <when id="if_insert">
                    <simple>${headers.topic} == ${type:com.ncsp.esb.amq.structures.TopicType.Insert}</simple>
                    <!-- <process id="insertRecordProcess" ref="insertRecord"/> -->
                    <log id="insert_log" message="Sending message INSERT ${body}"/>
                </when>
                <when id="if_setWagonStatus">
                    <simple>${headers.topic} == ${type:com.ncsp.esb.amq.structures.TopicType.SetWagonStatus}</simple>
                    <log id="setWagonStatus_log" message="Sending message SetWagonStatus ${body}"/>
                    <process id="setWagonStatusProcess" ref="setWagonStatus"/>
                    <log id="end_log" message="END ${body}"/>
                </when>
                <otherwise id="if_other">
                    <log id="other_log" message="Sending OTHER message ${body}"/>
                </otherwise>
            </choice>
        </route>
        <!-- <route id="message-watcher">
            <from id="_from1" uri="timer://timer?fixedRate=true&amp;period=5000"/>
            <process id="_process2" ref="selectRecords"/>
        </route> -->
    </camelContext>
</blueprint>
